<!--begin::Edit SMS Action-->
<div class="modal fade" id="kt_modal_edit_action_sms" tabindex="-1" aria-hidden="true">
  <!--begin::Modal dialog-->
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <!--begin::Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title"><%= t('services.automations.edit_action.sms_invitee_action') %></h5>

        <!--begin::Close-->
        <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
          <!--begin::Svg Icon | path: icons/duotone/Navigation/Close.svg-->
          <span class="svg-icon svg-icon-1">
		            <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
		              <g transform="translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)" fill="#000000">
		                <rect fill="#000000" x="0" y="7" width="16" height="2" rx="1"/>
		                <rect fill="#000000" opacity="0.5" transform="translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)" x="0" y="7" width="16" height="2" rx="1"/>
		              </g>
		            </svg>
		          </span>
          <!--end::Svg Icon-->
        </div>
        <!--end::Close-->
      </div>

      <div class="modal-body">
        <!--begin::Field-->
        <div class="mb-7">
          <label class="form-label"><%= t('services.automations.edit_action.choose_template') %></label>
          <select id="kt_select_edit_action_sms_choose_a_template" class="form-select" data-control="select2" data-placeholder="<%= t('common.select_placeholder') %>" data-minimum-results-for-search="Infinity">
            <option></option>
            <option value="confirmation" selected><%= t('services.automations.confirmation') %></option>
            <option value="reminder"><%= t('services.automations.reminders') %></option>
            <option value="cancellation"><%= t('services.automations.cancellation') %></option>
            <option value="rescheduling"><%= t('services.automations.rescheduling') %></option>
            <option value="followup"><%= t('services.automations.follow_up') %></option>
            <option value="custom"><%= t('services.automations.custom') %></option>
          </select>
        </div>
        <!--end::Field-->
        <!--begin::Field-->
        <div class="mb-0">
          <label class="form-label d-flex justify-content-between">
            <%= t('services.automations.edit_action.sms_text') %>
            <a id="kt_restore_default_edit_action_sms_body" class="text-decoration-underline" href="javascript:void(0)"><%= t('services.automations.edit_action.restore_default') %></a>
          </label>
          <textarea id="kt_field_edit_action_sms_body" name="kt_field_edit_action_sms_body" class="tox-target kt_field_sms_body"></textarea>
          <div id="kt_sms_counter_edit_action_sms_body"></div>
        </div>
        <!--end::Field-->
      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-light" data-bs-dismiss="modal"><%= t('common.button.cancel') %></button>
        <button type="button" id="sms_action_done" class="btn btn-primary" data-bs-dismiss="modal"><%= t('services.automations.done') %></button>
      </div>
    </div>
    <!--end::Modal content-->
  </div>
  <!--end::Modal dialog-->
</div>
<!--end::Edit SMS Action-->

<script>
    function createMessageCounter(params) {
        const {encoding, length, messages, per_message, remaining} = params;

        return `
					<ul class="list-unstyled fw-bold small text-primary border border-primary rounded py-3 px-4 mt-5">
						<li class="mb-1">Encoding: ${encoding}</li>
						<li class="mb-1">Length: ${length}</li>
						<li class="mb-1">Messages: ${messages}</li>
						<li class="mb-1">Per Message: ${per_message}</li>
						<li class="mb-0">Remaining: ${remaining}</li>
					</ul>
				`
    }

    // begin Edit SMS Action
    (function () {
        const templatesMapping = {
            confirmation: "<%= raw t('static_ivr.appointment_success_client_sms') %>",
            reminder: "<%= raw t('mails.reminder_sms_invitee.body') %>",
            cancellation: "",
            rescheduling: "",
            followup: "<%= raw t('mails.followup_sms_invitee.body') %>",
        };
        let elVal = $('#kt_select_edit_action_sms_choose_a_template').val();
        const setSmsCounter = function (editor) {
            const smsCounter = SmsCounter.count(editor.getContent({format: 'text'}));
            $('#kt_sms_counter_edit_action_sms_body').html(createMessageCounter(smsCounter));
        }


        tinymce.init({
            selector: 'textarea.kt_field_sms_body',
            menubar: false,
            toolbar: 'undo redo variables',
            setup: function (editor) {
                let toggleState = false;

                editor.ui.registry.addMenuButton('variables', {
                    text: 'Variables',
                    fetch: function (callback) {
                        var items = [
                            {
                                type: 'menuitem',
                                text: 'Invitee Full Name',
                                onAction: function () {
                                    editor.insertContent('%{full_name}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Invitee First Name',
                                onAction: function () {
                                    editor.insertContent('%{first_name}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Invitee Last Name',
                                onAction: function () {
                                    editor.insertContent('%{last_name}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Resource Name',
                                onAction: function () {
                                    editor.insertContent('%{resource_name}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Event Name',
                                onAction: function () {
                                    editor.insertContent('%{event_name}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Event Date',
                                onAction: function () {
                                    editor.insertContent('%{event_date}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Event Time',
                                onAction: function () {
                                    editor.insertContent('%{event_time}');
                                }
                            },
                            {
                                type: 'menuitem',
                                text: 'Event Day',
                                onAction: function () {
                                    editor.insertContent('%{event_day}');
                                }
                            },
                        ];

                        callback(items);
                    }
                });
            },
            init_instance_callback: function (editor) {
                setSmsCounter(editor);

                editor.on('keyup', function () {
                    setSmsCounter(editor);
                });
            }
        });

        $('#kt_select_edit_action_sms_choose_a_template').on('change', function () {

        });

        $('#kt_restore_default_edit_action_sms_body').on('click', function () {
            if (elVal === 'custom') return false;
            tinymce.get('kt_field_edit_action_sms_body').setContent(templatesMapping[$('input[name=automation_type]').val()]);
            setSmsCounter(tinymce.get('kt_field_edit_action_sms_body'));
        });

        $('#kt_restore_default_add_new_action_sms_body').on('click', function () {
            const template = $('select#kt_select_add_new_action_sms_choose_a_template').val();
            if (template === 'custom') return false;
            tinymce.get('kt_field_add_new_action_sms_body').setContent(templatesMapping[template]);
            setSmsCounter(tinymce.get('kt_field_add_new_action_sms_body'));
        });
    })();
    // end Edit SMS Action
</script>