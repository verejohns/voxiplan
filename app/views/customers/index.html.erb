<style>
  span.dtr-data {
      font-weight: 400;
  }
</style>
<%= stylesheet_link_tag    'datatables.bundle', media: 'all', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'datatables.bundle', 'data-turbolinks-track' => true %>
<div class="toolbar" id="kt_toolbar">
  <!--begin::Container-->
  <div id="kt_toolbar_container" class="container-fluid d-flex flex-stack">
    <!--begin::Page title-->
    <div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}"
         class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
      <!--begin::Title-->
      <h1 class="d-flex align-items-center text-dark fw-bolder my-1 fs-3"><%= t('customers.contacts') %></h1>
      <!--end::Title-->
    </div>
    <!--end::Page title-->
    <!--begin::Actions-->
    <div class="d-flex align-items-center py-1"></div>
    <!--end::Actions-->
  </div>
  <!--end::Container-->
</div>

<!--begin::Post-->
<div class="post d-flex flex-column-fluid" id="kt_post">
  <!--begin::Container-->
  <div id="kt_content_container" class="container-fluid">
    <div class="card mb-7">
      <div class="card-body">
        <!--begin::Wrapper-->
        <div class="d-sm-flex flex-stack mb-5">
          <!--begin::Search-->
          <div class="d-flex align-items-center position-relative my-1">
            <!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
            <span class="svg-icon svg-icon-1 position-absolute ms-6">
											<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
												<rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"></rect>
												<path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z"
                          fill="black"></path>
											</svg>
										</span>
            <!--end::Svg Icon-->
            <input type="text" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" placeholder="<%= t('customers.search_contacts') %>" />
          </div>
          <!--end::Search-->

          <!--begin::Toolbar-->
          <div class="d-sm-flex justify-content-end" data-kt-docs-table-toolbar="base">
            <!--begin::Export-->
            <div class="me-3">
              <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
                <!--begin::Svg Icon-->
                <span class="svg-icon svg-icon-2">
													<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
														<path d="M21 22H3C2.4 22 2 21.6 2 21C2 20.4 2.4 20 3 20H21C21.6 20 22 20.4 22 21C22 21.6 21.6 22 21 22ZM11 6.59998V17C11 17.6 11.4 18 12 18C12.6 18 13 17.6 13 17V6.59998H11Z"
                              fill="black" />
														<path opacity="0.3" d="M7 6.59999H17L12.7 2.3C12.3 1.9 11.7 1.9 11.3 2.3L7 6.59999Z" fill="black" />
													</svg>
												</span>
                <!--end::Svg Icon-->
                <%= t('common.button.export') %>
              </button>
              <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold w-125px py-4" data-kt-menu="true">
                <!--begin::Menu item-->
                <div class="menu-item px-3"><a href="#" class="menu-link px-3" onclick='$(".buttons-print").click();'><%= t('common.button.print') %></a></div>
                <div class="menu-item px-3"><a href="#" class="menu-link px-3" onclick='$(".export-copy").click();'><%= t('common.button.copy') %></a></div>
                <div class="menu-item px-3"><a href="#" class="menu-link px-3" onclick='$(".buttons-excel").click();'><%= t('common.button.excel') %></a></div>
                <div class="menu-item px-3"><a href="<%= customers_path(format: :csv) %>" class="menu-link px-3" ><%= t('common.button.csv') %></a></div>
                <div class="menu-item px-3"><a href="#" class="menu-link px-3" onclick='$(".buttons-pdf").click();'><%= t('common.button.pdf') %></a></div>
                <!--end::Menu item-->
              </div>
            </div>
            <!--end::Export-->
            <!--begin::Import-->
            <div class="me-3">
              <button type="button" class="btn btn-light-primary" id="import-button" onclick="importCSV()">
                <span class="svg-icon svg-icon-2">
													<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
														<path d="M21 22H3C2.4 22 2 21.6 2 21C2 20.4 2.4 20 3 20H21C21.6 20 22 20.4 22 21C22 21.6 21.6 22 21 22ZM13 13.4V3C13 2.4 12.6 2 12 2C11.4 2 11 2.4 11 3V13.4H13Z"
                                  fill="black" />
														<path opacity="0.3" d="M7 13.4H17L12.7 17.7C12.3 18.1 11.7 18.1 11.3 17.7L7 13.4Z" fill="black" />
													</svg>
												</span>
                <span class="indicator-label"><%= t('common.button.import') %></span>
                <span class="indicator-progress"><%= t('common.button.import') %>
                  <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                </span>
              </button>
            </div>
            <!--end::Import-->

            <!--begin::Add customer-->
            <a href="#kt_modal_add_new_contact" class="btn btn-primary" data-bs-toggle="modal" onclick="newContact()">
              <!--begin::Svg Icon-->
              <span class="svg-icon svg-icon-2">
												<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
													<rect opacity="0.5" x="11.364" y="20.364" width="16" height="2" rx="1" transform="rotate(-90 11.364 20.364)" fill="black"></rect>
													<rect x="4.36396" y="11.364" width="16" height="2" rx="1" fill="black"></rect>
												</svg>
											</span>
              <!--end::Svg Icon-->
              <%= t('customers.new_customer') %>
            </a>
            <!--end::Add customer-->
          </div>
          <!--end::Toolbar-->

          <!--begin::Group actions-->
          <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
            <div class="fw-bolder me-5">
              <span class="me-2" data-kt-docs-table-select="selected_count"></span> <%= t('common.table.selected') %>
            </div>

            <button type="button" class="btn btn-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
              <%= t('common.table.selection_action') %>
            </button>
            <!--begin::Menu-->
            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold w-125px py-4"
              data-kt-menu="true">
              <!--begin::Menu item-->
              <div class="menu-item px-3">
                <a href="#" class="menu-link px-3 d-none" onclick="copyContract()"><%= t('common.button.copy') %></a>
              </div>
              <!--end::Menu item-->
              <!--begin::Menu item-->
              <div class="menu-item px-3">
                <a href="#" class="menu-link px-3" onclick="deleteMultiContract()"><%= t('button.delete') %></a>
              </div>
              <!--end::Menu item-->
            </div>
          </div>
          <!--end::Group actions-->
        </div>
        <!--end::Wrapper-->

        <!--begin::Datatable-->
        <table id="kt_datatable_example_1" class="table align-middle table-row-dashed fs-6 gy-5">
          <thead>
          <tr class="text-start text-gray-400 fw-bolder fs-7 text-uppercase gs-0">
            <th class="w-10px pe-2" data-priority="1">
              <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                <input class="form-check-input" type="checkbox" data-kt-check="true"
                       data-kt-check-target="#kt_datatable_example_1 .form-check-input" value="1" />
              </div>
            </th>
            <th class="min-w-150px"><%= t('customers.first_name') %></th>
            <th class="min-w-150px"><%= t('customers.last_name') %></th>
            <th class="min-w-200px"><%= t('customers.phone_number') %></th>
            <th class="min-w-300px"><%= t('customers.email') %></th>
            <th class="min-w-500px"><%= t('customers.notes') %></th>
            <th class="text-end min-w-100px"><%= t('customers.actions') %></th>
            <th><%= t('customers.gender') %></th>
            <th><%= t('customers.birthday') %></th>
            <th><%= t('customers.street') %></th>
            <th><%= t('customers.zipcode') %></th>
            <th><%= t('customers.city') %></th>
            <th><%= t('customers.country') %></th>
            <th><%= t('customers.phone_number') %> 2</th>
            <th><%= t('customers.phone_number') %> 3</th>
            <th><%= t('customers.phone_number') %> 4</th>

          </tr>
          </thead>
          <tbody class="text-gray-600 fw-bold"></tbody>
        </table>
        <!--end::Datatable-->
      </div>
    </div>
  </div>
  <!--end::Container-->
</div>
<!--end::Post-->

<%= render "customer_form" %>
<%= render "customer_detail" %>
<%= render "customer_exception" %>

<script type="text/javascript" src="https://js.csvbox.io/script.js"></script>
<script type="text/javascript">
    let iti_array = [];
    let IPdata_key = "<%= ENV['IPdata_key'] %>";

    let input = $('input[name=customer_phone_number]')[0];
    let iti = window.intlTelInput(input, {
        initialCountry: "auto",
        utilsScript: "/assets/utils.js",
        preferredCountries: ["fr", "be", "de", "gb", "us", "ca"],
        geoIpLookup: function (callback) {
            $.get("https://api.ipdata.co?api-key=" + IPdata_key, function () {
            }, "jsonp").always(function (resp) {
                const countryCode = (resp && resp.country_code) ? resp.country_code : "fr";
                callback(countryCode);
            }).fail(function() {
                callback('fr');
            });
        }
    });

    $("input#user_country").countrySelect({ defaultCountry: 'empty' });
    $("input#user_country").val("Select a country");

    if ($('input#user_country_code').val() != '') {
        $("input#user_country").countrySelect("selectCountry", $('input#user_country_code').val());
    }

    function importCSV() {
        const import_button = document.getElementById('import-button');
        import_button.setAttribute('data-kt-indicator', 'on');
        import_button.disabled = true;

        function callback(result, data) {
            if(result){
                console.log("success", data);
                console.log(data.row_success + " rows uploaded");
                //custom code
                $.ajax({
                    url: "<%= send_phone_info_customers_path %>",
                    type: "POST",
                    success: function(response) {
                        console.log('csv importing result => ', response.message);
                        window.location.reload();
                    }
                })
            } else {
                console.log("fail", importer);
            }
        }
        let importer = new CSVBoxImporter("<%= ENV['CSVBOX_LICENCE_KEY_' + (I18n.locale.to_s.upcase != 'EN' && I18n.locale.to_s.upcase != 'FR' && I18n.locale.to_s.upcase != 'DE' ? 'EN' : I18n.locale.to_s.upcase)] %>",{ }, callback);

        importer.setUser({
            user_id: "<%= current_client.id %>"
        });
        importer.listen("onReady", function(){
            import_button.removeAttribute('data-kt-indicator');
            import_button.disabled = false;
        });

        importer.openModal();
    }
</script>
<script>
    (function () {
        // Class definition
        var KTDatatablesServerSide = function () {
            // Mock
            var dataSet = <%= raw @customer_data.to_json %>;


            // Shared variables
            var table;
            var dt;

            // Private functions
            var initDatatable = function () {
                dt = $("#kt_datatable_example_1").DataTable({
                    dom: 'Blfrtip',
                    searchDelay: 500,
                    order: [[4, "desc"]],
                    responsive: true,
                    // stateSave: true,
                    select: {
                        style: "os",
                        selector: "td:first-child",
                        className: "row-selected"
                    },
                    data: dataSet,
                    buttons: [
                        {
                            extend: 'print',
                            text: 'Print',
                            className: 'export-print btn btn-default btn-icon-sm d-none',
                            exportOptions: {
                                modifier: {
                                    page: 'all'
                                }
                            }
                        },
                        {
                            extend: 'copy',
                            text: 'Copy',
                            className: 'export-copy btn btn-default btn-icon-sm d-none',
                            exportOptions: {
                                modifier: {
                                    page: 'all'
                                }
                            }
                        },
                        {
                            extend: 'copy',
                            text: 'Row Copy',
                            className: 'export-row-copy btn btn-default btn-icon-sm d-none',
                            exportOptions: {
                                modifier: {
                                    selected: true
                                }
                            }
                        },
                        {
                            extend: 'excel',
                            text: 'Excel',
                            className: 'export-excel btn btn-default btn-icon-sm d-none',
                            filename: 'contacts',
                            exportOptions: {
                                modifier: {
                                    page: 'all'
                                },
                                columns: ':not(.no-visible)'
                            }
                        },
                        {
                            extend: 'csv',
                            text: 'CSV',
                            className: 'export-csv btn btn-default btn-icon-sm d-none',
                            filename: 'contacts',
                            exportOptions: {
                                modifier: {
                                    page: 'all'
                                },
                                columns: ':not(.no-visible)'
                            }
                        },
                        {
                            extend: 'pdf',
                            text: 'PDF',
                            className: 'export-pdf btn btn-default btn-icon-sm d-none',
                            filename: 'contacts',
                            exportOptions: {
                                modifier: {
                                    page: 'all'
                                },
                                columns: ':not(.no-visible)'
                            }
                        },
                    ],
                    columns: [
                        { data: "RecordID" },
                        { data: "FirstName" },
                        { data: "LastName" },
                        { data: "Phone" },
                        { data: "Email" },
                        { data: "Notes" },
                        { data: null },
                        { data: "Gender" },
                        { data: "Birthday" },
                        { data: "Street" },
                        { data: "Zipcode" },
                        { data: "City" },
                        { data: "Country" },
                        { data: "Phone2" },
                        { data: "Phone3" },
                        { data: "Phone4" },
                    ],
                    columnDefs: [
                        {
                            targets: 0,
                            orderable: false,
                            className: "no-visible",
                            render: function (data) {
                                return `
									<div class="form-check form-check-sm form-check-custom form-check-solid">
										<input class="form-check-input" type="checkbox" value="${data}" />
									</div>
								`;
                            }
                        },
                        {
                            targets: 6,
                            data: null,
                            orderable: false,
                            className: "text-end no-visible",
                            render: function () {
                                return `
									<div class="d-inline-block">
										<a href="javascript:void(0);" class="btn btn-icon btn-sm btn-white text-muted btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">
											<i class="bi bi-three-dots-vertical text-inherit fs-3"></i>
										</a>
										<!--begin::Menu-->
										<div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-175px py-4 text-start" data-kt-menu="true">
											<!--begin::Menu item-->
											<div class="menu-item px-3">
												<a href="#kt_modal_add_new_contact" class="menu-link px-3" data-bs-toggle="modal" onclick="editContact(event)">
													<%= t('button.edit') %>
												</a>
											</div>
											<!--end::Menu item-->
											<!--begin::Menu item-->
											<div class="menu-item px-3">
												<a href="#kt_modal_contact_details" class="menu-link px-3" data-bs-toggle="modal" onclick="viewDetailContact(event)">
													<%= t('common.button.view_details') %>
												</a>
											</div>
											<!--end::Menu item-->
											<!--begin::Menu item-->
											<div class="menu-item px-3">
												<a href="#kt_modal_exception_list" class="menu-link px-3" data-bs-toggle="modal" onclick="editExceptionList(event)">
													<%= t('common.button.exception_list') %>
												</a>
											</div>
											<!--end::Menu item-->
											<!--begin::Menu item-->
											<div class="menu-item px-3">
												<a href="javascript:void(0);" class="kt_alert_delete_contact menu-link px-3" >
													<%= t('button.delete') %>
												</a>
											</div>
											<!--end::Menu item-->
										</div>
										<!--end::Menu-->
									</div>
								`;
                            },
                        },
                    ],

                    initComplete: function () {
                        KTMenu.createInstances();
                    },
                });

                dt.columns([10, 11]).visible(true);
                // dt.columns([4, 6, 7, 8, 9, 10]).visible(false);
                table = dt.$;

                // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw
                dt.on("draw", function () {
                    initToggleToolbar();
                    toggleToolbars();
                    KTMenu.createInstances();
                });
            };

            // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
            var handleSearchDatatable = function () {
                const filterSearch = document.querySelector("[data-kt-docs-table-filter=\"search\"]");

                filterSearch.addEventListener("keyup", function (e) {
                    dt.search(e.target.value).draw();
                });
            };

            // Delete contact
            var handleDeleteRows = () => {
                // Select all delete buttons
                const deleteButtons = document.querySelectorAll(".kt_alert_delete_contact");

                deleteButtons.forEach(d => {
                    // Delete button on click
                    d.addEventListener("click", function (e) {
                        e.preventDefault();

                        // Select parent row
                        const parent = e.target.closest("tr");

                        // Get customer name
                        const customerFirstName = parent.querySelectorAll("td")[1].innerText;
                        const customerLastName = parent.querySelectorAll("td")[2].innerText;

                        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/
                        Swal.fire({
                            text: `<%= t('customers.want_delete') %> ${customerFirstName} ${customerLastName}?`,
                            icon: "warning",
                            showCancelButton: true,
                            buttonsStyling: false,
                            confirmButtonText: "<%= t('sweetalert.yes_delete') %>",
                            cancelButtonText: "<%= t('sweetalert.no_cancel') %>",
                            customClass: {
                                confirmButton: "btn fw-bold btn-danger",
                                cancelButton: "btn fw-bold btn-active-light-primary"
                            }
                        }).then(function (result) {
                            if (result.value) {
                                // Simulate delete request -- for demo purpose only
                                const tr = e.target.closest('tr');
                                const customer_id = tr.querySelectorAll("input.form-check-input")[0].value;

                                $.ajax({
                                    url: "/activity/customers/" + customer_id,
                                    type: "DELETE",
                                    success: function (response) {
                                        window.location.reload();
                                    }
                                });

                            }
                        });
                    });
                });
            };

            // Init toggle toolbar
            var initToggleToolbar = function () {
                // Toggle selected action toolbar
                // Select all checkboxes
                const container = document.querySelector("#kt_datatable_example_1");
                const checkboxes = container.querySelectorAll("[type=\"checkbox\"]");

                // Toggle delete selected toolbar
                checkboxes.forEach(c => {
                    // Checkbox on click event
                    c.addEventListener("click", function () {
                        setTimeout(function () {
                            toggleToolbars();
                        }, 50);
                    });
                });
            };

            // Toggle toolbars
            var toggleToolbars = function () {
                // Define variables
                const container = document.querySelector("#kt_datatable_example_1");
                const toolbarBase = document.querySelector("[data-kt-docs-table-toolbar=\"base\"]");
                const toolbarSelected = document.querySelector("[data-kt-docs-table-toolbar=\"selected\"]");
                const selectedCount = document.querySelector("[data-kt-docs-table-select=\"selected_count\"]");

                // Select refreshed checkbox DOM elements
                const allCheckboxes = container.querySelectorAll("tbody [type=\"checkbox\"]");

                // Detect checkboxes state & count
                let checkedState = false;
                let count = 0;

                // Count checked boxes
                allCheckboxes.forEach(c => {
                    if (c.checked) {
                        checkedState = true;
                        count++;
                    }
                });

                // Toggle toolbars
                if (checkedState) {
                    selectedCount.innerHTML = count;
                    toolbarBase.classList.add("d-none");
                    toolbarSelected.classList.remove("d-none");
                } else {
                    toolbarBase.classList.remove("d-none");
                    toolbarSelected.classList.add("d-none");
                }
            };

            // Public methods
            return {
                init: function () {
                    initDatatable();
                    handleSearchDatatable();
                    handleDeleteRows();
                    initToggleToolbar();
                }
            };
        }();

        // On document ready
        KTUtil.onDOMContentLoaded(function () {
            KTDatatablesServerSide.init();
        });
    })();

    (function () {
        $(".kt_datepicker").flatpickr();
    })();

    // Select2 flag
    (function () {
        function resultTmp(state) {
            if (!state.id) {
                return state.text;
            }

            let baseUrl = "./assets/media/flags";

            return $(`
            <span class="d-flex">
              <img src="${baseUrl}/${state.element.value.toLowerCase()}.svg" class="img-flag me-2" />
              ${state.text}
            </span>
          `);
        }

        function selectionTmp(state) {
            if (!state.id) {
                return state.text;
            }

            let baseUrl = "./assets/media/flags";

            return $(`
                <span class="d-flex">
                  <img src="${baseUrl}/${state.element.value.toLowerCase()}.svg" class="img-flag" />
                </span>
              `);
        }

        $(".kt_select2_flags").select2({
            templateResult: resultTmp,
            templateSelection: selectionTmp,
            dropdownAutoWidth: true,
        });
    })();

    function newContact() {
        const contact_modal = document.getElementById("kt_modal_add_new_contact");
        const contact_modal_form = contact_modal.querySelector("#new_customer");
        iti_array = [];
        contact_modal_form.reset();
        $('div#phone-clone-box').html('');
        clonePhoneNumber("");
        $('button.save-button span.indicator-label').html('<%= t('common.button.add') %>');
        $('input#selected_customer_id').val('');
    }

    function editContact(e) {
        const tr = e.target.closest('tr');
        const customer_id = tr.querySelectorAll("input.form-check-input")[0].value;
        const auth = $('[name="csrf-token"]')[0].content;

        $.ajax({
            url: "<%= get_contact_customers_path %>",
            type: "POST",
            data: {
                authenticity_token: auth,
                customer_id: customer_id
            },
            success: function(response){
                iti_array = [];
                const customer = response.customer_data;
                const contacts = response.contact_data;
                $('input#customer_first_name').val(customer.first_name);
                $('input#customer_last_name').val(customer.last_name);
                $('input#customer_email').val(customer.email);
                $('select#customer_gender').select2().val(customer.gender == 'f' ? 1 : customer.gender).trigger('change');
                $('input#customer_birthday').val(customer.birthday == "" || customer.birthday == null ? "" : formatDate(customer.birthday));
                if (customer.country != "" && customer.country != null) {
                    // $('input#user_country_code').val(customer.country.toUpperCase());
                    $("input#user_country").countrySelect("selectCountry", "bs");
                    $("input#user_country").countrySelect("selectCountry", customer.country.toLowerCase());
                }
                $('input#customer_street').val(customer.street);
                $('input#customer_city').val(customer.city);
                $('input#customer_zipcode').val(customer.zipcode);
                $('textarea#customer_notes').val(customer.notes);
                $('div#contact-header .modal-title').html("<%= t('customers.edit_customer') %>");

                $('div#phone-clone-box').html('');
                contacts.forEach(function(contact, index) {
                    clonePhoneNumber(contact.phone);
                    changePhoneNumber($('input.customer_phone_number')[index + 1]);
                });

                $('button.save-button span.indicator-label').html('<%= t('common.button.update') %>');
                $('input#selected_customer_id').val(customer.id);
            }
        });
    }

    function deleteMultiContract() {
        const container = document.querySelector("#kt_datatable_example_1");
        const allCheckboxes = container.querySelectorAll("tbody [type=\"checkbox\"]");
        let checked_ids = [];
        allCheckboxes.forEach(c => {
            if (c.checked) {
                checked_ids.push(c.value)
            }
        });

        if (checked_ids.length == 0) return;

        Swal.fire({
            text: `<%= t('customers.want_delete_selected') %>`,
            icon: "warning",
            showCancelButton: true,
            buttonsStyling: false,
            confirmButtonText: "<%= t('sweetalert.yes_delete') %>",
            cancelButtonText: "<%= t('sweetalert.no_cancel') %>",
            customClass: {
                confirmButton: "btn fw-bold btn-danger",
                cancelButton: "btn fw-bold btn-active-light-primary"
            }
        }).then(function (result) {
            if (result.value) {

                $.ajax({
                    url: "<%= customers_delete_multiple_path %>",
                    type: "POST",
                    data: {
                        authenticity_token: $('[name="csrf-token"]')[0].content,
                        ids: JSON.stringify(checked_ids)
                    },
                    success: function (response) {
                        window.location.reload();
                    }
                });

            }
        });

    }

    function copyContract() {
        const container = document.querySelector("#kt_datatable_example_1");
        const allCheckboxes = container.querySelectorAll("tbody [type=\"checkbox\"]");
        // let checked_ids = [];
        allCheckboxes.forEach(c => {
            if (c.checked) {
                const tr = $(c).parent().parent().parent()
                $(tr).addClass('important');
            }
        });

        $('#kt_datatable_example_1').DataTable().rows('.important').select();
        $('.export-row-copy').click();
        $('#kt_datatable_example_1').DataTable().rows('.important').deselect();

        allCheckboxes.forEach(c => {
            if (c.checked) {
                const tr = $(c).parent().parent().parent()
                $(tr).removeClass('important');
            }
        });

    }

    function viewDetailContact(e) {
        const tr = e.target.closest('tr');
        const customer_id = tr.querySelectorAll("input.form-check-input")[0].value;
        const auth = $('[name="csrf-token"]')[0].content;

        $.ajax({
            url: "<%= get_contact_customers_path %>",
            type: "POST",
            data: {
                authenticity_token: auth,
                customer_id: customer_id
            },
            success: function(response){
                const customer = response.customer_data;
                const contacts = response.contact_data;
                let gender = 'unknown';
                if (customer.gender == 0) gender = "-";
                if (customer.gender == 1 || customer.gender == 'f') gender = "<%= t('customers.male') %>";
                if (customer.gender == 2) gender = "<%= t('customers.female') %>";
                if (customer.gender == 9) gender = "<%= t('customers.not_applicable') %>";

                $('div.detail-first-name').html(customer.first_name);
                $('div.detail-last-name').html(customer.last_name);
                $('div.detail-email').html(customer.email == '' || customer.email == null ? '-' : customer.email);
                $('div.detail-gender').html(gender);
                $('div.detail-birthday').html(customer.birthday == '' || customer.birthday == null ? '-' : customer.birthday);
                $('div.detail-street').html(customer.street == '' || customer.street == null ? '-' : customer.street);
                $('div.detail-city').html(customer.city == '' || customer.city == null ? '-' : customer.city);
                $('div.detail-zipcode').html(customer.zipcode == '' || customer.zipcode == null ? '-' : customer.zipcode);
                $('div.detail-notes').html(customer.notes == '' || customer.notes == null ? '-' : customer.notes);

                let phone_number_html = '';
                contacts.forEach(function(contact, index) {
                    phone_number_html += '<span style="display:block">' + contact.phone + '</span>';
                });
                $('div.detail-phone-number').html(phone_number_html);
                $('div.detail-created-at').html(moment(customer.created_at).format("LLLL") || "-");
            }
        });
    }

    function editExceptionList(e) {
        const tr = e.target.closest('tr');
        const customer_id = tr.querySelectorAll("input.form-check-input")[0].value;
        const auth = $('[name="csrf-token"]')[0].content;

        $.ajax({
            url: "<%= get_contact_customers_path %>",
            type: "POST",
            data: {
                authenticity_token: auth,
                customer_id: customer_id
            },
            success: function(response){
                $('select.exceptional-list').html('');
                const contacts = response.contact_data;

                let phone_numbers = [];
                const checked_exception_list = [];
                contacts.forEach(function(contact, index) {
                    const phone_number = {id: contact.id, text: contact.phone}
                    phone_numbers.push(phone_number)
                    if (contact.exceptional_number == true) checked_exception_list.push(contact.id);
                });
                $('select.exceptional-list').select2({data: phone_numbers});
                $('select.exceptional-list').select2().val(checked_exception_list).trigger('change');
                $('input#selected_customer_id').val(customer_id);
            }
        });
    }

    function formatDate(date) {
        const d = isFinite(date) ? new Date(parseInt(date)) : new Date(date);
        if (isNaN(d)) return "";

        let month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('-');
    }
</script>
<style>
  #kt_datatable_example_1_wrapper {
      margin-top: -20px;
  }
  #kt_datatable_example_1_filter {
      margin-top: -48px;
      display: none;
  }
  div#kt_datatable_example_1_length {
      display: none;
  }
</style>